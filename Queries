 
# USE JOIN TO FIND DATA TO ASSIGN DOG A VET #

SELECT BOARDING.OID, OWNER.DOGID
FROM BOARDING 
FULL OUTER JOIN OWNER ON BOARDING.OID=OWNER.OID
ORDER BY BOARDING.OID;

# QUERY CREATED TO FIND DATE OF PAYMENTS #

SELECT PAYMENT.PAYID, PAYMENT.OID, BOARDING.LAST_STAY
FROM BOARDING
LEFT JOIN PAYMENT
ON BOARDING.OID = PAYMENT.OID
ORDER BY BOARDING.OID;

# QUERY USED TO FIND HIRE DATE OF VETS TO DETERMINE A ROOM CREATION DATE #

SELECT ROOM.RMID, ROOM.VETID, VET.HIREDATE
FROM ROOM
INNER JOIN VET ON ROOM.VETID=VET.VETID;


#QUERY TO GET OBTAIN LAST STAY OF DOG FROM BOARDING AND OWNER TABLE#

SELECT OWNER.OID, OWNER.DOGID, BOARDING.LAST_STAY
FROM OWNER
LEFT JOIN BOARDING
ON OWNER.OID = BOARDING.OID
ORDER BY OWNER.OID;


# WRITE A QUERY THAT GIVE THE LATEST VET INFORMATON.

SELECT VETID, NAME, PHONENUM, HIREDATE, RMID
FROM VET;

#Write a query that gives upcoming reservations

SELECT OWNER.FNAME, OWNER.LNAME, BOARDING.UPCOMING_STAY, BOARDING.BID
FROM OWNER
INNER JOIN BOARDING
ON OWNER.OID = BOARDING.OID;

#WRITE A QUERY THAT GIVES THE SUM of ALL RESERVATIONS. 

SELECT SUM (TOTAL)
FROM PAYMENT

#WRITE A QUERY THAT SHOWS THE NUMBER OF RESERVATIONS 

SELECT COUNT (TOTAL)
FROM PAYMENT

#WRITE A QUERY THAT ORDERS OWNER NAME IN ALPHABETICAL ORDER.


#WRITE A SQL PROCEDURE THAT SHOWS UPCOMING RESERVATIONS
























